---
// MasonryGallery.astro - Preserves natural aspect ratios
import { Image } from 'astro:assets';

export interface Props {
  columns?: number;
  imageWidth?: number;
  gap?: string;
}

const { 
  columns = 3, 
  imageWidth = 400,
  gap = '1rem'
} = Astro.props;

// Import all images from assets folder
const imageModules = import.meta.glob('../assets/*.{jpeg,jpg,png,gif,webp}', { 
  eager: true,
  import: 'default' 
});

// Convert to array format with metadata
const images = Object.entries(imageModules).map(([path, module]) => {
  const filename = path.split('/').pop()?.split('.')[0] || '';
  
  return {
    src: module,
    alt: filename.replace(/[_-]/g, ' '),
    title: filename
      .split(/[_-]/)
      .map(word => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' '),
    filename: filename
  };
});

// Sort images by filename for consistent ordering
images.sort((a, b) => a.filename.localeCompare(b.filename));
---

<div class="masonry-gallery" style={`--columns: ${columns}; --gap: ${gap};`}>
  {images.map((image, index) => (
    <div class="masonry-item" data-index={index}>
      <Image 
        src={image.src} 
        alt={image.alt}
        width={imageWidth}
        loading="lazy"
        class="masonry-image"
        quality={90}
        format="webp"
      />
    </div>
  ))}
</div>

{images.length === 0 && (
  <div class="no-images">
    <p>No images found in ../assets/</p>
  </div>
)}

<style>
  .masonry-gallery {
    columns: var(--columns);
    column-gap: var(--gap);
    padding: var(--gap);
  }

  .masonry-item {
    position: relative;
    break-inside: avoid;
    margin-bottom: var(--gap);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .masonry-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.25);
  }

  .masonry-image {
    width: 100%;
    height: auto;
    display: block;
    transition: transform 0.3s ease;
  }

  .masonry-item:hover .masonry-image {
    transform: scale(1.02);
  }

  .image-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(
      to top,
      rgba(0, 0, 0, 0.8) 0%,
      rgba(0, 0, 0, 0.3) 60%,
      transparent 100%
    );
    color: white;
    padding: 1.5rem 1rem 1rem;
    transform: translateY(100%);
    transition: transform 0.3s ease;
  }

  .masonry-item:hover .image-overlay {
    transform: translateY(0);
  }

  .image-title {
    font-size: 1rem;
    font-weight: 600;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.7);
    line-height: 1.3;
  }

  .no-images {
    text-align: center;
    padding: 2rem;
    color: #666;
    font-style: italic;
  }

  /* Responsive adjustments */
  @media (max-width: 1200px) {
    .masonry-gallery {
      columns: calc(var(--columns) - 1);
    }
  }

  @media (max-width: 768px) {
    .masonry-gallery {
      columns: 2;
      column-gap: 0.75rem;
      padding: 0.75rem;
    }

    .masonry-item {
      margin-bottom: 0.75rem;
    }

    .image-overlay {
      padding: 1rem 0.75rem 0.75rem;
    }

    .image-title {
      font-size: 0.9rem;
    }
  }

  @media (max-width: 480px) {
    .masonry-gallery {
      columns: 1;
      column-gap: 0.5rem;
      padding: 0.5rem;
    }

    .masonry-item {
      margin-bottom: 0.5rem;
    }
  }
</style>